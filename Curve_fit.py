# 使用log回归法计算曲线并拟合；
import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit


# 时间数据（假设是0到1分钟的每个时间点，使用0到60的整数表示）
y = [
0.000,-0.615,-0.846,-1.798,-2.028,-2.995,-3.204,-4.202,-5.142,-5.375,
-6.353,-6.585,-7.562,-8.561,-9.112,-9.345,-10.327,-10.561,-11.541,-12.540,
-13.143,-13.374,-14.351,-14.584,-15.558,-16.555,-17.155,-17.386,-18.361,-18.593,
-19.565,-20.560,-21.158,-21.389,-22.359,-22.590,-23.561,-24.559,-25.103,-25.339,
-26.319,-26.553,-27.532,-28.509,-28.740,-29.739,-30.342,-30.575,-31.547,-32.286,
-32.288,-32.299,-32.263,-32.267,-32.283,-32.292,-32.294,-32.305,-32.309,-32.311,
-32.286,-32.299,-32.302,-32.317,-32.320,-32.331,-32.306,-32.322,-32.326,-32.336,
-32.338,-32.349,-32.353,-32.362,-32.364,-32.368,-32.371,-32.364,-32.362,-32.329,
-32.330,-32.333,-32.331,-32.331,-32.333,-32.306,-32.308,-32.316,-32.318,-32.321,
-32.329,-32.328,-32.336,-32.309,-32.310,-32.319,-32.322,-32.323,-32.329,-32.331,
-32.332,-32.332,-32.330,-32.329,-32.333,-32.335,-32.335,-32.307,-32.313,-32.314,
-32.319,-32.319,-32.319,-32.319,-32.320,-32.321,-32.316,-32.316,-32.319,-32.317,
-32.313,-32.314,-32.313,-32.314,-32.311,-32.311,-32.311,-32.277,-32.279,-32.282,
-32.283,-32.287,-32.287,-32.288,-32.283,-32.284,-32.285,-32.287,-32.285,-32.286,
-32.289,-32.258,-32.260,-32.266,-32.266,-32.268,-32.271,-32.275,-32.276,-32.246,
-32.255,-32.257,-32.265,-32.265,-32.266,-32.238,-32.244,-32.247,-32.248,-32.249,
-32.253,-32.254,-32.253,-32.253,-32.252,-32.254,-32.252,-32.250,-32.218,-32.219,
-32.225,-32.226,-32.232,-32.231,-32.233,-32.235,-32.234,-32.235,-32.236,-32.235,
-32.234,-32.232,-32.235,-32.207,-32.208,-32.219,-32.224,-32.225,-32.227,-32.228,
-32.229,-32.227,-32.228,-32.229,-32.226,-32.228,-32.227,-32.222,-32.222,-32.220
]

t = np.linspace(0.001, 60, len(y))  # 为了避免对数的负无穷，避免 t=0


# 定义对数模型
def log_model(t, A, B, C):
    return A * np.log(t + B) + C


# 使用 curve_fit 进行拟合
params, covariance = curve_fit(log_model, t, y, p0=[1, 1, 1])
A_fit, B_fit, C_fit = params
# 拟合参数


# 打印拟合参数
print(f"拟合结果: A = {A_fit:.4f}, B = {B_fit:.4f}, C = {C_fit:.4f}")

# 绘制原始数据和拟合曲线
plt.figure(figsize=(10, 6))
plt.scatter(t, y, color='blue', label='原始数据')
plt.plot(t, log_model(t, *params), color='red', label='对数拟合')
plt.xlabel('时间 t (秒)')
plt.ylabel('y(t)')
plt.legend()
plt.show()

